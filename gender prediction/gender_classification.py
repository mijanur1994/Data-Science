# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1H6AHKy1u_TKuGAJaQO_Szda2R4dXHJ3S
"""

import nltk
import random
from nltk.corpus import names
import pickle

nltk.download('names')
names_data = [(name,"male") for name in names.words("male.txt")] + [(name,"female") for name in names.words("female.txt")]
names_data[:10]

random.shuffle(names_data)
names_data[:10]

#now to we have our dataset 
#we have to define features for each name
def get_features(name):
  feature = {"last_letter" : name[-1:]}
  return feature

#test this get_feature function for a list of words
get_features("prantika")

#now we have to transform the name based on the featureset
name_data_transformed = [(get_features(name),label) for (name,label) in names_data]
name_data_transformed[:5]

#here we divide our data in training data and test data
len(name_data_transformed)
end = int(len(name_data_transformed) * .8)

"""# Modification2"""

#define a new feature set
def get_features2(name):
  name = name.lower()
  feature = {"first_letter" : name[:1],
             "second_letter": name[:2],
             "last_letter" : name [-1:],
             "sec_last_letter" : name[-2:]}
  return feature

#test
get_features2("Chayan")

#transformed data preparation
transformed_data2 = [(get_features2(name),label) for (name,label) in names_data]
transformed_data2[:5]

#divide in train and test data
train_data2 = transformed_data2[:end]
test_data2 = transformed_data2[end+1 : ]

#train a naive bayes classifier
naive_classifier2 = nltk.NaiveBayesClassifier.train(train_data2)

#test on a name
predict = naive_classifier2.classify(get_features2("chayan"))

#accuracy on traing data
nltk.classify.accuracy(naive_classifier2,train_data2)

#accuracy on test data
nltk.classify.accuracy(naive_classifier2,test_data2)


print(predict)
"""Acuuracy is really good now.Still to improve"""

pickle.dump(naive_classifier2,open('model.pkl', 'wb'))